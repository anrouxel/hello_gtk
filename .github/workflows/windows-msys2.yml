name: CI - build (Windows, MSYS2, GTK4)
on:
  push:
    branches: [ "main" ]
  pull_request:
jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust toolchain (GNU)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          components: rustfmt, clippy
      - name: Setup MSYS2 and install packages (GTK4, libadwaita)
        id: msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          cache: true
          install: >-
            rsync
            pkg-config
            gcc
            vim
            mingw-w64-x86_64-gtk4
            mingw-w64-x86_64-gettext
            mingw-w64-x86_64-libxml2
            mingw-w64-x86_64-librsvg
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-gcc
            mingw-w64-ucrt-x86_64-gtk4
            mingw-w64-ucrt-x86_64-toolchain
            base-devel
            mingw-w64-ucrt-x86_64-libadwaita
            mingw-w64-x86_64-libadwaita
            mingw-w64-ucrt-x86_64-gstreamer
            mingw-w64-x86_64-gstreamer
            mingw-w64-x86_64-gst-libav
            glib2-devel
            mingw-w64-x86_64-gst-plugins-base
            mingw-w64-x86_64-gst-plugins-good
            mingw-w64-x86_64-gst-plugins-bad
            mingw-w64-x86_64-gst-plugins-ugly
            mingw-w64-x86_64-gst-libav
            mingw-w64-x86_64-gst-rtsp-server
            mingw-w64-x86_64-desktop-file-utils
      - name: Show installed gtk pkg-config info
        run: |
          pkg-config --modversion gtk4 || true
          pkg-config --cflags --libs gtk4 || true
          pkg-config --modversion libadwaita || true
          pkg-config --cflags --libs libadwaita || true
      - name: Find adwaita-1.lib
        run: |
          find / -name 'adwaita-1.lib' 2>/dev/null
      - name: Cache cargo registry & target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Build (release)
        run: |
          export PATH=$PATH:/c/Users/runneradmin/.cargo/bin
          export LIBRARY_PATH=$LIBRARY_PATH:/usr/lib:/usr/local/lib
          rustup default stable
          cargo build --release
      - name: Collect runtime DLLs & package
        run: |
          mkdir -p release_bundle
          cp target/release/*.exe release_bundle/ || true
          cp /usr/bin/*.dll release_bundle/ || true
          ls -la release_bundle
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: release_bundle
